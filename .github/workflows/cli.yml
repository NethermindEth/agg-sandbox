name: CLI

on:
  push:
    branches: [main]
    paths:
      - "cli/**"
      - ".github/workflows/cli.yml"
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: CLI / Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            cli/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('cli/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting
        working-directory: ./cli
        run: cargo fmt --all -- --check

      - name: Clippy
        working-directory: ./cli
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Check
        working-directory: ./cli
        run: cargo check --all-targets --all-features

  test:
    name: CLI / Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            cli/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('cli/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run tests
        working-directory: ./cli
        run: cargo test --all-features

  build:
    name: CLI / Build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            cli/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('cli/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        working-directory: ./cli
        run: cargo build --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aggsandbox-${{ matrix.os }}
          path: |
            cli/target/release/aggsandbox${{ matrix.os == 'windows-latest' && '.exe' || '' }}
