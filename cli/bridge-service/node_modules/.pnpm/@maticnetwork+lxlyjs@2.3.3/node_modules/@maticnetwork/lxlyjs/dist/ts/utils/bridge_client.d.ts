import { Web3SideChainClient } from ".";
import { BridgeUtil } from "../lxly";
import { IBaseClientConfig } from "..";
import { IBridges } from "../interfaces";
import { IBridgeExtensions } from "../interfaces/bridge_extension";
export declare class BridgeClient {
    client: Web3SideChainClient<IBaseClientConfig>;
    bridgeUtil: BridgeUtil;
    bridges: IBridges;
    bridgeExtensions: IBridgeExtensions;
    /**
     * check if the bridge is claimable
     *
     * @param {string} txHash
     * @param {string} sourceNetwork
     * @param {number} [bridgeIndex=0]
     * @returns
     * @memberof BridgeClient
     */
    isBridgeClaimable(txHash: string, sourceNetwork: number, bridgeIndex?: number): any;
    /**
     * check whether deposit is completed
     *
     * @param {string} txHash
     * @param {string} sourceNetwork
     * @param {string} destinationNetwork
     * @param {string} [bridgeIndex=0]
     * @returns
     * @memberof BridgeClient
     */
    isBridged(txHash: string, sourceNetwork: number, destinationNetwork: number, bridgeIndex?: number): any;
}
